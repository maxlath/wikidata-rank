#!/usr/bin/env node
const { spawn } = require('child_process')
const coreCount = require('os').cpus().length
const split = require('split')
const { roundRobinBalanceLine, closeChildren, exitOnChildExit } = require('../lib/multi_processes_helpers')
const logAndExit = require('../lib/log_and_exit')

const [ command, ...args ] = process.argv.slice(2)

const children = []

console.log('parallel processes', coreCount)

for (let i = 0 ; i < coreCount ; i++) {
  const child = spawn(command, args, {
    stdio: [ 'pipe', 'inherit', 'inherit' ]
  })
  children.push(child)
  child.on('exit', exitOnChildExit)
}

process.stdin
.pipe(split())
.on('data', roundRobinBalanceLine(children))
.on('close', closeChildren(children))
.on('error', logAndExit)
