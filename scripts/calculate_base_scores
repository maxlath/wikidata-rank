#!/usr/bin/env node
const split = require('split')
const batch = require('../lib/batch')
const getEntityData = require('../lib/get_entity_data')
const { buildOpFromEntityData } = require('../lib/ops')
const status = require('../lib/status')
const { pid } = status
const { green, grey, red } = require('chalk')
const logAndExit = require('../lib/log_and_exit')

process.stdin
.pipe(split())
.on('data', function (line) {
  if (line[0] !== '{') return
  line = line.replace(/,$/, '')
  const entity = JSON.parse(line)
  if (entity.type !== 'item') return
  const data = getEntityData(entity)
  batch.aggregate(buildOpFromEntityData(entity.id, data), this)
  status.increment()
})
.on('close', () => {
  batch.flush()
  .then(status.done)
})
.on('error', logAndExit)

setTimeout(() => {
  if (status.counter() === 0) {
    console.error(pid, red('expect data on process stdin'))
    process.exit(1)
  }
}, 1000)
